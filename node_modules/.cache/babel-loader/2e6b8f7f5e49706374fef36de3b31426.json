{"ast":null,"code":"var _jsxFileName = \"/home/nil/art/programming/github/TechFolio/src/ApolloProvider.js\";\nimport React, { Suspense } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { openSourceSection } from \"./techfolio\";\nimport Loader from \"./Components/common/Loader.js\";\nconst App = React.lazy(() => import(\"./App\"));\nconst key = openSourceSection.githubToken ? openSourceSection.githubToken.replace(/^\"(.*)\"$/, \"$1\") : \"\";\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${atob(key)}`\n      }\n    });\n  }\n});\nexport default /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Suspense, {\n  fallback: /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n})));","map":{"version":3,"sources":["/home/nil/art/programming/github/TechFolio/src/ApolloProvider.js"],"names":["React","Suspense","ApolloClient","ApolloProvider","openSourceSection","Loader","App","lazy","key","githubToken","replace","client","uri","request","operation","setContext","headers","authorization","atob"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,MAAMC,GAAG,GAAGN,KAAK,CAACO,IAAN,CAAW,MAAM,OAAO,OAAP,CAAjB,CAAZ;AACA,MAAMC,GAAG,GAAGJ,iBAAiB,CAACK,WAAlB,GACRL,iBAAiB,CAACK,WAAlB,CAA8BC,OAA9B,CAAsC,UAAtC,EAAkD,IAAlD,CADQ,GAER,EAFJ;AAIA,MAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC9BU,EAAAA,GAAG,EAAE,gCADyB;AAE9BC,EAAAA,OAAO,EAAGC,SAAD,IAAe;AACtBA,IAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,IAAI,CAACV,GAAD,CAAM;AAD5B;AADU,KAArB;AAKD;AAR6B,CAAjB,CAAf;AAWA,4BACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,QAAQ,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF","sourcesContent":["import React, { Suspense } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { openSourceSection } from \"./techfolio\";\nimport Loader from \"./Components/common/Loader.js\";\nconst App = React.lazy(() => import(\"./App\"));\nconst key = openSourceSection.githubToken\n  ? openSourceSection.githubToken.replace(/^\"(.*)\"$/, \"$1\")\n  : \"\";\n\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: (operation) => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${atob(key)}`,\n      },\n    });\n  },\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <Suspense fallback={<Loader />}>\n      <App />\n    </Suspense>\n  </ApolloProvider>\n);\n"]},"metadata":{},"sourceType":"module"}