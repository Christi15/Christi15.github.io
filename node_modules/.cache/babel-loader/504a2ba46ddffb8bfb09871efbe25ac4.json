{"ast":null,"code":"var _jsxFileName = \"/home/nil/art/programming/github/TechFolio/src/Components/Github/Github.js\";\nimport React, { useContext, useState, Fragment } from \"react\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport Fade from \"react-reveal/Fade\";\nimport GitHubCard from \"./GitHubCard\";\nimport \"./github.css\";\nimport { Row } from \"react-flexbox-grid\";\nimport { ScrollContext } from \"../../Context/scroll\";\nimport { FETCH_REPOS } from \"../../utils/graphql.js\";\nimport { useQuery } from \"react-apollo\";\nimport { openSourceSection, socialNetworks } from \"../../techfolio\";\nimport Message from \"./Message\";\nimport Heading from \"../common/Heading\";\nimport { isMobile } from \"react-device-detect\";\n\nfunction Github() {\n  const {\n    scrollChange\n  } = useContext(ScrollContext);\n  const {\n    githubUserName,\n    numberOfRepos\n  } = openSourceSection;\n  const initialValue = numberOfRepos > 4 ? 4 : numberOfRepos;\n  const [repos, setRepos] = useState(initialValue);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_REPOS, {\n    variables: {\n      login: githubUserName,\n      first: repos\n    }\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, isMobile && /*#__PURE__*/React.createElement(Heading, {\n    heading: \"Open Source\",\n    style: {\n      marginBottom: \"70px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section section4\",\n    id: \"githubSection\",\n    name: \"openSources\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VisibilitySensor, {\n    onChange: isVisible => {\n      if (isVisible) {\n        scrollChange(\"github\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Message, {\n    message: {\n      type: \"success\",\n      title: \"Loading...\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    message: {\n      type: \"error\",\n      title: \"Error\",\n      desc: \"Whoops! Sorry for the inconvenience, something went wrong.\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    bottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    around: \"xs\",\n    className: \"githubRepoCards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, data.user.pinnedItems.edges.map((repo, i) => {\n    return /*#__PURE__*/React.createElement(GitHubCard, {\n      repo: repo,\n      key: repo.node.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 28\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Row, {\n    around: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, numberOfRepos > repos ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-1\",\n    onClick: () => {\n      setRepos(numberOfRepos);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"View more\") : /*#__PURE__*/React.createElement(\"a\", {\n    href: socialNetworks.github,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"btn btn-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"View more\"), \" \"))))))));\n}\n\nexport default Github;","map":{"version":3,"sources":["/home/nil/art/programming/github/TechFolio/src/Components/Github/Github.js"],"names":["React","useContext","useState","Fragment","VisibilitySensor","Fade","GitHubCard","Row","ScrollContext","FETCH_REPOS","useQuery","openSourceSection","socialNetworks","Message","Heading","isMobile","Github","scrollChange","githubUserName","numberOfRepos","initialValue","repos","setRepos","loading","error","data","variables","login","first","marginBottom","isVisible","type","title","desc","user","pinnedItems","edges","map","repo","i","node","id","github"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,cAAP;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,iBAAlD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AACA,SAASC,MAAT,GAAkB;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAmBhB,UAAU,CAACO,aAAD,CAAnC;AACA,QAAM;AAAEU,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAoCR,iBAA1C;AACA,QAAMS,YAAY,GAAGD,aAAa,GAAG,CAAhB,GAAoB,CAApB,GAAwBA,aAA7C;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAACkB,YAAD,CAAlC;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bf,QAAQ,CAACD,WAAD,EAAc;AACrDiB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAET,cAAT;AAAyBU,MAAAA,KAAK,EAAEP;AAAhC;AAD0C,GAAd,CAAzC;AAGA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QAAQ,iBAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,aAAlB;AAAiC,IAAA,KAAK,EAAE;AAAEc,MAAAA,YAAY,EAAE;AAAhB,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,eAEE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,IAAI,EAAC,aAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,gBAAD;AACE,IAAA,QAAQ,EAAGC,SAAD,IAAe;AACvB,UAAIA,SAAJ,EAAe;AACbb,QAAAA,YAAY,CAAC,QAAD,CAAZ;AACD;AACF,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGM,OAAO,gBACN,oBAAC,OAAD;AACE,IAAA,OAAO,EAAE;AACPQ,MAAAA,IAAI,EAAE,SADC;AAEPC,MAAAA,KAAK,EAAE;AAFA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAOJR,KAAK,gBACP,oBAAC,OAAD;AACE,IAAA,OAAO,EAAE;AACPO,MAAAA,IAAI,EAAE,OADC;AAEPC,MAAAA,KAAK,EAAE,OAFA;AAGPC,MAAAA,IAAI,EACF;AAJK,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAUP;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAC,IAAZ;AAAiB,IAAA,SAAS,EAAC,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IAAI,CAACS,IAAL,CAAUC,WAAV,CAAsBC,KAAtB,CAA4BC,GAA5B,CAAgC,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5C,wBAAO,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAED,IAAlB;AAAwB,MAAA,GAAG,EAAEA,IAAI,CAACE,IAAL,CAAUC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CADF,eAME,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,aAAa,GAAGE,KAAhB,gBACC;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,QAAQ,CAACH,aAAD,CAAR;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,gBAUC;AACE,IAAA,IAAI,EAAEP,cAAc,CAAC8B,MADvB;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,GAAG,EAAC,qBAHN;AAIE,IAAA,SAAS,EAAC,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXJ,EAmBK,GAnBL,CADF,CADF,CANF,CADF,CAxBJ,CALF,CAFF,CADF;AAuED;;AAED,eAAe1B,MAAf","sourcesContent":["import React, { useContext, useState, Fragment } from \"react\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport Fade from \"react-reveal/Fade\";\nimport GitHubCard from \"./GitHubCard\";\nimport \"./github.css\";\nimport { Row } from \"react-flexbox-grid\";\nimport { ScrollContext } from \"../../Context/scroll\";\nimport { FETCH_REPOS } from \"../../utils/graphql.js\";\nimport { useQuery } from \"react-apollo\";\nimport { openSourceSection, socialNetworks } from \"../../techfolio\";\nimport Message from \"./Message\";\nimport Heading from \"../common/Heading\";\nimport { isMobile } from \"react-device-detect\";\nfunction Github() {\n  const { scrollChange } = useContext(ScrollContext);\n  const { githubUserName, numberOfRepos } = openSourceSection;\n  const initialValue = numberOfRepos > 4 ? 4 : numberOfRepos;\n  const [repos, setRepos] = useState(initialValue);\n  const { loading, error, data } = useQuery(FETCH_REPOS, {\n    variables: { login: githubUserName, first: repos },\n  });\n  return (\n    <Fragment>\n      {isMobile && <Heading heading={\"Open Source\"} style={{ marginBottom: \"70px\" }} />}\n      <section\n        className=\"section section4\"\n        id=\"githubSection\"\n        name=\"openSources\"\n      >\n        <VisibilitySensor\n          onChange={(isVisible) => {\n            if (isVisible) {\n              scrollChange(\"github\");\n            }\n          }}\n        >\n          {loading ? (\n            <Message\n              message={{\n                type: \"success\",\n                title: \"Loading...\",\n              }}\n            />\n          ) : error ? (\n            <Message\n              message={{\n                type: \"error\",\n                title: \"Error\",\n                desc:\n                  \"Whoops! Sorry for the inconvenience, something went wrong.\",\n              }}\n            />\n          ) : (\n            <div className=\"site-container\">\n              <Fade bottom>\n                <Row around=\"xs\" className=\"githubRepoCards\">\n                  {data.user.pinnedItems.edges.map((repo, i) => {\n                    return <GitHubCard repo={repo} key={repo.node.id} />;\n                  })}\n                </Row>\n                <Row around=\"xs\">\n                  <div className=\"banner-content\">\n                    <div className=\"banner-btns\">\n                      {numberOfRepos > repos ? (\n                        <button\n                          className=\"btn btn-1\"\n                          onClick={() => {\n                            setRepos(numberOfRepos);\n                          }}\n                        >\n                          View more\n                        </button>\n                      ) : (\n                        <a\n                          href={socialNetworks.github}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"btn btn-1\"\n                        >\n                          View more\n                        </a>\n                      )}{\" \"}\n                    </div>\n                  </div>\n                </Row>\n              </Fade>\n            </div>\n          )}\n        </VisibilitySensor>\n      </section>\n    </Fragment>\n  );\n}\n\nexport default Github;\n"]},"metadata":{},"sourceType":"module"}